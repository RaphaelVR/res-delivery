// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId], name: "providerAccountId_unique") // Unique index
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(auto()) @map("_id")  @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  isAdmin       Boolean   @default(false)
  accounts      Account[]
  sessions      Session[]
  orders        Order[]   // Adjusted field name for MongoDB convention (lowercase plural)
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id")  @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token], name: "identifier_token_unique")
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime  @default(now())
  title     String
  desc      String
  color     String
  img       String
  slug      String    @unique
  products  Product[]
}

model Product {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime @default(now())
  title      String
  desc       String
  img        String?
  price      Float
  isFeatured Boolean  @default(false)
  options    Json[]
  category   Category @relation(fields: [catSlug], references: [slug])
  catSlug    String
}

model Order {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  price     Float
  products  Json[]
  status    String
  intent_id String?  @unique
  user      User     @relation(fields: [userEmail], references: [email])
  userEmail String
}
